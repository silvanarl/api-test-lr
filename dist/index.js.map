{"version":3,"sources":["../src/index.js"],"names":["typeDefs","gql","resolvers","Query","notes","note","parent","args","id","getNoteByID","idNum","parseInt","filter","server","ApolloServer","listen","port","process","env","PORT","then","url","console","log"],"mappings":";;AAAA;;AACA;;;;;;;;;;;;;;;;AAEC;AACA,IAAMA,QAAQ,OAAGC,iBAAH,oBAAd;AAgBD,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AAAA,aAAMA,iBAAMA,KAAZ;AAAA,KADF;AAELC,IAAAA,IAAI,EAAE,cAACC,MAAD,EAASC,IAAT,EAAkB;AAAA,UACfC,EADe,GACTD,IADS,CACfC,EADe;AAEtB,aAAOC,WAAW,CAAC;AAACD,QAAAA,EAAE,EAAFA;AAAD,OAAD,CAAlB;AACD;AALI;AADS,CAAlB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACD,EAAD,EAAQ;AAC1B,MAAME,KAAK,GAAGC,QAAQ,CAACH,EAAE,CAACA,EAAJ,CAAtB;AACA,SAAOJ,iBAAMA,KAAN,CAAYQ,MAAZ,CAAmB,UAAAP,IAAI,EAAI;AAC9B,WAAOA,IAAI,CAACG,EAAL,KAAYE,KAAnB;AACH,GAFM,EAEJ,CAFI,CAAP;AAGD,CALD;;AAOA,IAAMG,MAAM,GAAG,IAAIC,0BAAJ,CAAiB;AAC9Bd,EAAAA,QAAQ,EAARA,QAD8B;AAE9BE,EAAAA,SAAS,EAATA;AAF8B,CAAjB,CAAf;AAKAW,MAAM,CAACE,MAAP,CAAc;AAAEC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB;AAA5B,CAAd,EAAkDC,IAAlD,CAAuD,gBAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAClEC,EAAAA,OAAO,CAACC,GAAR,yCAAmCF,GAAnC;AACD,CAFD","sourcesContent":["import  notes from './data.json';\r\nimport { ApolloServer, gql } from 'apollo-server';\r\n\r\n // TypeDefs\r\n const typeDefs = gql`\r\n type Note {\r\n   title: String\r\n   id: ID\r\n   cover_titular: String\r\n   text: String\r\n\r\n }\r\n # The \"Query\" type is the root of all GraphQL queries.\r\n type Query {\r\n   notes: [Note]\r\n   note(id: ID!): Note\r\n }\r\n`;\r\n\r\n\r\nconst resolvers = {\r\n  Query: {\r\n    notes: () => notes.notes,\r\n    note: (parent, args) => {\r\n      const {id} = args;\r\n      return getNoteByID({id});\r\n    }\r\n  }\r\n};\r\nconst getNoteByID = (id) => {\r\n  const idNum = parseInt(id.id)\r\n  return notes.notes.filter(note => {\r\n      return note.id === idNum;\r\n  })[0]\r\n};\r\n\r\nconst server = new ApolloServer({ \r\n  typeDefs,\r\n  resolvers\r\n});\r\n\r\nserver.listen({ port: process.env.PORT || 4000 }).then(({ url }) => {\r\n  console.log(`ğŸš€  Server ready at ${url}`);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"file":"index.js"}